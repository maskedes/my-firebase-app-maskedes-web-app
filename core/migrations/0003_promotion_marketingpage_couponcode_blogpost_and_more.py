# Generated by Django 4.2.23 on 2025-07-06 18:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0002_video"),
    ]

    operations = [
        migrations.CreateModel(
            name="Promotion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal name for the promotion.", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Customer-facing description if applicable.",
                    ),
                ),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("percentage", "Percentage"),
                            ("fixed_amount", "Fixed Amount"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "discount_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "end_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Optional: when the promotion automatically deactivates.",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Master switch for the promotion.",
                    ),
                ),
                (
                    "max_uses",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Max total uses for this entire promotion across all codes.",
                        null=True,
                    ),
                ),
                (
                    "total_uses_count",
                    models.PositiveIntegerField(
                        default=0,
                        editable=False,
                        help_text="How many times this promotion has been used in total.",
                    ),
                ),
                (
                    "max_uses_per_user",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Max times a single user can use this promotion.",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Promotion",
                "verbose_name_plural": "Promotions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MarketingPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly identifier. Auto-generated if left blank in admin.",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Main content body. Can use Markdown or HTML if supported by frontend rendering."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("review", "In Review"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        db_index=True,
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        help_text="Date and time content was published.",
                        null=True,
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        blank=True,
                        help_text="Brief description for SEO (meta description tag).",
                        max_length=300,
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated keywords for SEO.",
                        max_length=255,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_authored",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Marketing Page",
                "verbose_name_plural": "Marketing Pages",
            },
        ),
        migrations.CreateModel(
            name="CouponCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="The actual coupon code string (e.g., SUMMER20).",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Switch for this specific code."
                    ),
                ),
                (
                    "uses_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="How many times this specific code has been used.",
                    ),
                ),
                (
                    "max_uses",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Max uses for this specific code (can override promotion's global limit for this code).",
                        null=True,
                    ),
                ),
                (
                    "valid_from",
                    models.DateTimeField(
                        blank=True,
                        help_text="Code-specific start date (must be within promotion's dates).",
                        null=True,
                    ),
                ),
                (
                    "valid_to",
                    models.DateTimeField(
                        blank=True,
                        help_text="Code-specific end date (must be within promotion's dates).",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "promotion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coupons",
                        to="core.promotion",
                    ),
                ),
                (
                    "user_specific",
                    models.ForeignKey(
                        blank=True,
                        help_text="If set, only this user can use the coupon.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="coupons",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Coupon Code",
                "verbose_name_plural": "Coupon Codes",
                "ordering": ["promotion", "code"],
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly identifier. Auto-generated if left blank in admin.",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Main content body. Can use Markdown or HTML if supported by frontend rendering."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("review", "In Review"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        db_index=True,
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        help_text="Date and time content was published.",
                        null=True,
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        blank=True,
                        help_text="Brief description for SEO (meta description tag).",
                        max_length=300,
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated keywords for SEO.",
                        max_length=255,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_authored",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Blog Post",
                "verbose_name_plural": "Blog Posts",
            },
        ),
        migrations.CreateModel(
            name="TrackedEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("user_signup", "User Signup"),
                            ("user_login", "User Login"),
                            ("user_logout", "User Logout"),
                            ("profile_update", "Profile Update"),
                            ("page_view", "Page View"),
                            ("blog_post_view", "Blog Post View"),
                            ("marketing_page_view", "Marketing Page View"),
                            ("video_view", "Video View"),
                            ("video_upload_initiated", "Video Upload Initiated"),
                            ("video_published", "Video Published"),
                            ("coupon_validated", "Coupon Validated"),
                            ("coupon_applied", "Coupon Applied"),
                            ("error_occurred", "Error Occurred"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                (
                    "data",
                    models.JSONField(
                        blank=True, help_text="Event-specific data payload.", null=True
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tracked_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tracked Event",
                "verbose_name_plural": "Tracked Events",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "timestamp"],
                        name="core_tracke_event_t_128226_idx",
                    ),
                    models.Index(
                        fields=["user", "timestamp"],
                        name="core_tracke_user_id_804910_idx",
                    ),
                ],
            },
        ),
    ]
